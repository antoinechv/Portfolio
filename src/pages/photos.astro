---
import ProjectCard from "../components/CardProject.astro";
import {wpquery} from "../graphql/wordPressQuery";
import NavBar from "../components/JSX/NavBar";
import Layout from "../Layout/Head.astro";
import "../index.css";
import {ViewTransitions} from 'astro:transitions';


const data = await wpquery({
    query: `
 {
  typesPhotos {
    nodes {
      name
      id 
        }
  }
  photos {
    nodes {
      slug
      photos {
        description
        titre
        tags {
          nodes {
            id
            name
          }
        }
        miniature {
          node {
            altText
            sourceUrl
          }
        }
      }
      id
    }
  }
 
}
  `,
});

const {typesPhotos, photos} = data;
---

<!doctype html>
<html lang="fr">
<Layout title="PORTFOLIO"/>
<body class="bg-light-cream">
<ViewTransitions enter="transition-all duration-700 ease-in-out transform translate-x-full opacity-0"
                 exit="transition-all duration-500 ease-in-out transform translate-x-0 opacity-100"/>
<header>
    <NavBar client:load/>
</header>
<main>
    <div
            class="py-14 sm:px-8 sm:py-16 md:px-16 md:py-24 flex justify-center items-center flex-col gap-10 flex-wrap p-5"
    >
        <h1 class="font-truculenta font-black text-black text-6xl">
            Mes photos
        </h1>

        <!-- Navigation for filtering by taxonomy -->

        <div
                id="photo-gallery"
                class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 items-center gap-5"
        >
            {data.photos.nodes
                .filter(
                    (photoNode) =>
                        photoNode.photos?.miniature?.node?.sourceUrl && photoNode.photos?.titre
                )
                .map((photoNode) => (
                        <div
                                class="project-card w-full h-full"
                                data-tags={photoNode.photos.tags.nodes.map((tag) => tag.name).join(",")}
                        >
                            <ProjectCard
                                    key={photoNode.id}
                                    href={`/photos/${photoNode.id}`}
                                    image={photoNode.photos.miniature.node.sourceUrl}
                                    alt={photoNode.photos.miniature.node.altText}
                                    title={photoNode.photos.titre}
                                    description={photoNode.photos.description}
                                    tags={photoNode.photos.tags}
                            />
                        </div>

                ))}
        </div>
    </div>

</main>


</body>
</html>
