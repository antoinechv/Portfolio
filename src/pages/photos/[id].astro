---
import {wpquery} from "../../graphql/wordPressQuery";
import Layout from "../../Layout/Head.astro";
import NavBar from "../../components/JSX/NavBar";
import GalleryItem from "../../components/JSX/GalleryItem";
import {ViewTransitions} from "astro:transitions";

export async function getStaticPaths() {
    const data = await wpquery({
        query: `
      {
        photos {
          nodes {
            id
          }
        }
      }
    `,
    });

    const paths = data.photos.nodes.map((photo) => ({
        params: {id: photo.id.toString()},
    }));

    return paths;
}

const {id} = Astro.params;

const data = await wpquery({
    query: `
   {
  photo(id: "${id}") {
    id
    photos {
      description
      titre
      tags {
        nodes {
          id
          name
        }
      }
      miniature {
        node {
          altText
          sourceUrl
        }
      }
      gallerie {
        photo {
          node {
            altText
            sourceUrl
          }
        }
        photo_2 {
          node {
            altText
            sourceUrl
          }
        }
        photo_3 {
          node {
            altText
            sourceUrl
          }
        }
        photo_4 {
          node {
            altText
            sourceUrl
          }
        }
        photo_5 {
          node {
            altText
            sourceUrl
          }
        }
        photo_6 {
          node {
            altText
            sourceUrl
          }
        }
        
       photo_7 {
          node {
            altText
            sourceUrl
          }
        }
        
        photo_8 {
          node {
            altText
            sourceUrl
          }
        }
        
        photo_9 {
          node {
            altText
            sourceUrl
          }
        }
        photo_10 {
          node {
            altText
            sourceUrl
          }
        }
      
      }
    }
  }
}

  `,
});




const gallerie = data.photo?.photos?.gallerie || {};
const photo = data.photo?.photos;


let galleryPhotos = Object.values({
    photo: gallerie.photo?.node,
    photo_2: gallerie.photo_2?.node,
    photo_3: gallerie.photo_3?.node,
    photo_4: gallerie.photo_4?.node,
    photo_5: gallerie.photo_5?.node,
    photo_6: gallerie.photo_6?.node,
    photo_7: gallerie.photo_7?.node,
    photo_8: gallerie.photo_8?.node,
    photo_9: gallerie.photo_9?.node,
    photo_10: gallerie.photo_10?.node,
}).filter((photo) => photo?.sourceUrl);
---

<html>
<Layout title="PORTFOLIO"/>
<body>
<ViewTransitions enter="transition-all duration-700 ease-in-out transform translate-x-full opacity-0" exit="transition-all duration-500 ease-in-out transform translate-x-0 opacity-100" />
<header>
    <NavBar client:load/>
</header>

<main>
    <div class="py-10 sm:px-8 sm:py-16 md:px-16 md:py-24 flex justify-center items-center flex-col gap-10 flex-wrap p-5">
        <h1 class="font-truculenta font-black text-black text-6xl">
            Galerie : {photo.titre}
        </h1>
        {galleryPhotos.length > 0 ? (
                <div class="wrapper mx-auto p-5 max-w-screen-lg">
                  <div class=" grid gap-5 grid-cols-1  lg:grid-cols-2 xl:grid-cols-4 grid-flow-row">
                        {galleryPhotos.map((galleryPhoto, index) => (
                            <GalleryItem client:load galleryPhoto={galleryPhoto} index={index} />
                        ))}
                    </div>
                </div>
        ) : (
                <p>Aucune photo disponible dans la galerie.</p>
        )}
    </div>

</main>

</body>
</html>
