---
import {wpquery} from "../../graphql/wordPressQuery";
import Layout from "../../Layout/Head.astro";
import NavBar from "../../components/JSX/NavBar";
import {ViewTransitions} from "astro:transitions";
import {nominalTypeHack} from "prop-types";

import {YouTube} from 'astro-embed';




export async function getStaticPaths() {
    const data = await wpquery({
        query: `
      {
        videos {
          nodes {
            id
          }
        }
      }
    `,
    });

    const paths = data.videos.nodes.map((video) => ({
        params: {id: video.id.toString()},
    }));

    return paths;
}

const {id} = Astro.params;

const data = await wpquery({
    query: `
    {
      video(id: "${id}") {
    id
    videos {
      annee
      description
      descriptionProjet
      titre
      miniature {
        node {
          altText
          sourceUrl
        }
      }
      logiciel {
        nodes {
          id
          name
        }
      }
      gallerie {
        video1
        video2
        video3
        video4
        video5
        video6
        video7
        video8
        video9
        video10
      }
      tags {
          nodes {
            id
            name
          }
        }
      sectionvideo {
        titre
        description
        fichier {
          node {
            altText
            link
          }
        }
        miniature {
        node {
          altText
          link
        }
      }
      }
    }
  }
    }
  `,
});

const video = data.video?.videos;
const gallerie = video?.gallerie || {};

let galleryVideos = Object.values({
    photo: gallerie.video1,
    photo2: gallerie.video2,
    photo3: gallerie.video3,
    photo_4: gallerie.video4,
    photo_5: gallerie.video5,
    photo_6: gallerie.video6,
    photo_7: gallerie.video7,
    photo_8: gallerie.video8,
    photo_9: gallerie.video9,
    photo_10: gallerie.video10,
}).filter((video) => video);
---

<!doctype html>
<html>
<Layout title="PORTFOLIO"/>
<body class="bg-light-cream">
<ViewTransitions enter="transition-all duration-700 ease-in-out transform translate-x-full opacity-0"
                 exit="transition-all duration-500 ease-in-out transform translate-x-0 opacity-100"/>
<header>
    <NavBar client:load/>
</header>
<main>

    <div class="py-14 sm:px-8 sm:py-16 md:px-16 md:py-24 flex justify-center items-center flex-col gap-10 flex-wrap ">

        <div class="flex flex-col  gap-5 flex-wrap w-full border-b-2 border-black p-5">
            <div class="flex flex-row gap-2 items-center  ">
                <a class="text-black text-lg font-black font-truculenta" href="/videos/">Videos</a>
                <span class="text-black text-lg">/</span>
                <a class="text-black text-lg font-black font-truculenta" href="">{video.titre}</a>
            </div>
            <h1 class="font-truculenta font-black text-black text-6xl">
                {video.titre}
            </h1>
            <p class="font-poppins font-medium text-black text-sm">
                {video.description}
            </p>
            <ul class="flex flex-row gap-2 w-full flex-wrap">
                {video.tags.nodes.map((tag) => (
                        <li class="text-white bg-red text-base font-medium px-2.5 py-1 rounded-lg font-truculenta list-none"
                            key={tag.id}>{tag.name}</li>
                ))}
            </ul>
        </div>

        <div class="flex md:flex-row flex-col-reverse gap-5 w-full border-black ">
            <div class="flex flex-col gap-5 w-full  justify-between  border-r-2 border-black">
                <div class="flex flex-col gap-5 w-full justify-center ">
                    <h2 class="font-truculenta font-black text-red text-3xl">
                        Description du projet
                    </h2>
                    <p class="font-poppins font-medium text-black text-sm w-4/5">
                        {video.descriptionProjet}
                    </p>
                </div>
                <div class="flex flex-col gap-5 w-full justify-center">
                    <h3 class="font-truculenta font-black text-red text-3xl">
                        Logiciel utilisés
                    </h3>
                    <ul class="flex flex-row gap-2 w-full flex-wrap">
                        {video.logiciel.nodes.map((logiciel) => (
                                <li class="text-white bg-red text-base font-medium px-2.5 py-1 rounded-lg font-truculenta"
                                    key={logiciel.id}>{logiciel.name}</li>
                        ))}
                    </ul>
                </div>
            </div>

            <div class="flex flex-col gap-5 w-full justify-between">
                <img
                        src={video.miniature.node.sourceUrl}
                        alt={video.miniature.node.altText}
                        class=" h-auto rounded-lg shadow-lg"
                />

                <div class="flex flex-row gap-2 w-full items-center h-min">
                    <h2 class="font-truculenta font-black text-black text-lg">Année: </h2>
                    <span class="font-truculenta font-black text-black text-base"> {video.annee} </span>
                </div>
            </div>
        </div>
    </div>

    <div class="wrapper mx-auto p-5 max-w-screen-lg">
        <div class="flex flex-col gap-5 w-full">
            <div class="flex flex-col gap-5 w-full">
                {video.sectionvideo && (
                        <h2 class="font-truculenta font-black text-red text-5xl">{video.sectionvideo.titre}</h2>
                        <p class="font-poppins font-medium text-black text-sm">
                            {video.sectionvideo.description}
                        </p>


                            <video
                                    src={video.sectionvideo.fichier.node.link}
                                    alt={video.sectionvideo.fichier.node.altText || 'Vidéo'}
                                    controls
                                    controlsList="nodownload"
                                    disablePictureInPicture
                                    poster={video.sectionvideo.miniature.node.link}
                                    class="w-full h-auto rounded-xl shadow-lg  "
                                    onLoadedMetadata={(e) => {
                                        e.target.currentTime = 4;
                                    }}
                            />


                )}
                <h2 class="font-truculenta font-black text-red text-5xl">Mes vidéos </h2>
                <ul class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4">
                    {galleryVideos.map((video, index) => (
                            <li><YouTube
                                    class=" rounded-lg shadow-lg"
                                    key={index}
                                    id={video}
                                    posterQuality="high"
                            /></li>
                    ))}
                </ul>
            </div>
        </div>
    </div>

</main>
</body>
</html>
