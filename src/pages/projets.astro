---
import ProjectCard from "../components/CardProject.astro";
import {wpquery} from "../graphql/wordPressQuery";
import NavBar from "../components/JSX/NavBar";
import Layout from "../Layout/Head.astro";
import "../index.css";
import {ViewTransitions} from 'astro:transitions';



const data = await wpquery({
    query: `
  {
  typesProjets {
    nodes {
      name
      id
    }
  }
projets {
    nodes {
      id
      projets {
        annee
        description
        descriptionProjet
        titre
        tags {
          nodes {
            id
            name
          }
        }
        miniature {
          node {
            altText
            sourceUrl
          }
        }
        logiciel {
          nodes {
            id
            name
          }
          
        }
      }
    }
  }
  }
  `,
});
---

<html lang="fr">
<Layout title="PORTFOLIO"/>
<body class="bg-light-cream">
<ViewTransitions enter="transition-all duration-700 ease-in-out transform translate-x-full opacity-0"
                 exit="transition-all duration-500 ease-in-out transform translate-x-0 opacity-100"/>
<header>
    <NavBar client:load/>
</header>

<Layout title="PORTFOLIO"/>
<div class="py-14 sm:px-8 sm:py-16 md:px-16 md:py-24 flex justify-center items-center flex-col gap-10 flex-wrap p-5">
    <h1 class="font-truculenta font-black text-black text-6xl">
        Mes projets
    </h1>
  <div class="flex flex-row flex-wrap gap-4 justify-center">
    <!-- Bouton pour afficher tout -->
    <button
        data-type="all"
        class="text-white bg-red text-sm font-medium px-4 py-2 rounded-lg font-truculenta"
    >
      Tous
    </button>

    <!-- Boutons pour chaque type -->
    {data.typesProjets.nodes.map((type) => (
        <button

            class="text-white bg-red text-sm font-medium px-4 py-2 rounded-lg font-truculenta"
        >
          {type.name}
        </button>
    ))}
  </div>
  <div
      id="project-gallery"
      class="flex flex-row flex-wrap gap-10 w-full items-stretch justify-center"
  >
    {data.projets.nodes
        .filter(
            (projetNode) =>
                projetNode.projets?.miniature?.node?.sourceUrl && projetNode.projets?.titre
        )
        .map((projetNode) => (
            <div
                class="flex flex-col items-center"
            >
              <ProjectCard
                  key={projetNode.id}
                  href={`/projets/${projetNode.id}`}
                  image={projetNode.projets.miniature.node.sourceUrl}
                  alt={projetNode.projets.miniature.node.altText}
                  title={projetNode.projets.titre}
                  description={projetNode.projets.description}
                  tags={projetNode.projets.tags}
              />
            </div>
        ))}
  </div>

</div>
</body>
</html>
